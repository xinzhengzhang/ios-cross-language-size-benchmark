#!/bin/bash

# Kotlin Native Prebuild Script - Exact Bazel Command Recreation
# Executes the KotlinNativePrebuild subcommand from bazel aquery

set -e

# Work in the standalone directory (simulating bazel execroot/_main)
# All paths in the bazel command are relative to this directory

# Set environment variables exactly as bazel does
export JAVA_HOME=${JAVA_HOME:-$(/usr/libexec/java_home)}

# Create output directories
mkdir -p bazel-workspace/bazel-out/ios_arm64-opt-ios-arm64-min15.0-applebin_ios-ST-659a08be7a88/bin/examples/ios-size-benchmark/ios_size_benchmark_library

# Prepare params files with real Kotlin Native paths
if [ -z "$KOTLIN_NATIVE_DIST" ]; then
    echo "Error: KOTLIN_NATIVE_DIST environment variable not set"
    echo "Please download Kotlin/Native compiler and set KOTLIN_NATIVE_DIST"
    exit 1
fi

# Check Kotlin Native version >= 2.2.20
check_kotlin_native_version() {
    local kotlin_native_version
    kotlin_native_version=$("$KOTLIN_NATIVE_DIST/bin/kotlinc-native" -version 2>&1 | head -1 | sed 's/.*kotlinc-native \([0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*\).*/\1/')
    
    if [ -z "$kotlin_native_version" ]; then
        echo "Error: Unable to determine Kotlin Native version"
        exit 1
    fi
    
    # Convert version to comparable format (e.g., 2.2.20 -> 20220)
    local current_version_num
    current_version_num=$(echo "$kotlin_native_version" | awk -F. '{printf "%d%02d%02d", $1, $2, $3}')
    local required_version_num=20220  # 2.2.20
    
    if [ "$current_version_num" -lt "$required_version_num" ]; then
        echo "Error: Kotlin Native version $kotlin_native_version is less than required version 2.2.20"
        echo "Please upgrade your Kotlin Native installation"
        exit 1
    fi
    
    echo "Kotlin Native version $kotlin_native_version meets requirement (>= 2.2.20)"
}

check_kotlin_native_version

PARAMS_FILE_0="bazel-workspace/bazel-out/ios_arm64-opt-ios-arm64-min15.0-applebin_ios-ST-659a08be7a88/bin/examples/ios-size-benchmark/ios_size_benchmark_library/examples_ios-size-benchmark_ios_size_benchmark_library.klib-0.params"
PARAMS_FILE_1="bazel-workspace/bazel-out/ios_arm64-opt-ios-arm64-min15.0-applebin_ios-ST-659a08be7a88/bin/examples/ios-size-benchmark/ios_size_benchmark_library/examples_ios-size-benchmark_ios_size_benchmark_library.klib-1.params"

TEMP_PARAMS_0="${PARAMS_FILE_0}.actual"
TEMP_PARAMS_1="${PARAMS_FILE_1}.actual"

# Copy first params file and remove bazel-workspace prefix
cp "$PARAMS_FILE_0" "$TEMP_PARAMS_0"

# Remove bazel-workspace prefix from paths in the first params file
sed -i '' -e "s|^bazel-workspace/||g" \
         -e "s|bazel-workspace/||g" \
         "$TEMP_PARAMS_0"

# Prepare second params file with real paths
KOTLIN_STDLIB_PATH="$KOTLIN_NATIVE_DIST/klib/common"
DEPENDENCIES_URL="ignore"

sed -e "s|__KOTLIN_NATIVE_STDLIB_PATH__|$KOTLIN_STDLIB_PATH|g" \
    -e "s|__DEPENDENCIES_URL__|$DEPENDENCIES_URL|g" \
    "$PARAMS_FILE_1" > "$TEMP_PARAMS_1"

echo "Compiling Kotlin Native with exact bazel command..."
echo "Using params files: $TEMP_PARAMS_0, $TEMP_PARAMS_1"

# Change to bazel-workspace directory and execute the exact bazel command
cd bazel-workspace
env - \
    JAVA_HOME="$JAVA_HOME" \
  $KOTLIN_NATIVE_DIST/bin/konanc \
    @"../$TEMP_PARAMS_0" \
    @"../$TEMP_PARAMS_1"
cd ..

# Prepare params files for prebuild (these would be generated by bazel)
STDLIB_PARAMS=(
  "bazel-workspace/bazel-out/ios_arm64-opt-ios-arm64-min15.0-applebin_ios-ST-659a08be7a88/bin/external/rules_kotlin_mobile~~deps_ext~com_github_jetbrains_kotlin_native_macos-aarch64/ios_arm64_stdlib_prebuild/prebuild_static_cache-0.params"
  "bazel-workspace/bazel-out/ios_arm64-opt-ios-arm64-min15.0-applebin_ios-ST-659a08be7a88/bin/external/rules_kotlin_mobile~~deps_ext~com_github_jetbrains_kotlin_native_macos-aarch64/ios_arm64_org.jetbrains.kotlin.native.platform.posix_prebuild/prebuild_static_cache-0.params"
  "bazel-workspace/bazel-out/ios_arm64-opt-ios-arm64-min15.0-applebin_ios-ST-659a08be7a88/bin/external/rules_kotlin_mobile~~deps_ext~com_github_jetbrains_kotlin_native_macos-aarch64/ios_arm64_org.jetbrains.kotlin.native.platform.CoreFoundationBase_prebuild/prebuild_static_cache-0.params"
  "bazel-workspace/bazel-out/ios_arm64-opt-ios-arm64-min15.0-applebin_ios-ST-659a08be7a88/bin/external/rules_kotlin_mobile~~deps_ext~com_github_jetbrains_kotlin_native_macos-aarch64/ios_arm64_org.jetbrains.kotlin.native.platform.darwin_prebuild/prebuild_static_cache-0.params"
  "bazel-workspace/bazel-out/ios_arm64-opt-ios-arm64-min15.0-applebin_ios-ST-659a08be7a88/bin/external/rules_kotlin_mobile~~deps_ext~com_github_jetbrains_kotlin_native_macos-aarch64/ios_arm64_org.jetbrains.kotlin.native.platform.CoreFoundation_prebuild/prebuild_static_cache-0.params"
  "bazel-workspace/bazel-out/ios_arm64-opt-ios-arm64-min15.0-applebin_ios-ST-659a08be7a88/bin/external/rules_gradle_external~~gradle~maven_deps_native_ios_arm64/org.jetbrains.kotlinx_atomicfu-iosarm64/prebuild_static_cache-0.params"
  "bazel-workspace/bazel-out/ios_arm64-opt-ios-arm64-min15.0-applebin_ios-ST-659a08be7a88/bin/external/rules_gradle_external~~gradle~maven_deps_native_ios_arm64/org.jetbrains.kotlinx_atomicfu-iosarm64/prebuild_static_cache-1.params"
  "bazel-workspace/bazel-out/ios_arm64-opt-ios-arm64-min15.0-applebin_ios-ST-659a08be7a88/bin/external/rules_gradle_external~~gradle~maven_deps_native_ios_arm64/org.jetbrains.kotlinx_kotlinx-coroutines-core-iosarm64/prebuild_static_cache-0.params"
  "bazel-workspace/bazel-out/ios_arm64-opt-ios-arm64-min15.0-applebin_ios-ST-659a08be7a88/bin/external/rules_gradle_external~~gradle~maven_deps_native_ios_arm64/org.jetbrains.kotlinx_kotlinx-serialization-core-iosarm64/prebuild_static_cache-0.params"
  "bazel-workspace/bazel-out/ios_arm64-opt-ios-arm64-min15.0-applebin_ios-ST-659a08be7a88/bin/external/rules_gradle_external~~gradle~maven_deps_native_ios_arm64/org.jetbrains.kotlinx_kotlinx-serialization-json-iosarm64/prebuild_static_cache-0.params"
  "bazel-workspace/bazel-out/ios_arm64-opt-ios-arm64-min15.0-applebin_ios-ST-659a08be7a88/bin/examples/ios-size-benchmark/ios_size_benchmark_library/prebuild_static_cache-0.params"
)

echo "Running Kotlin Native prebuilds with exact bazel command..."

for params in "${STDLIB_PARAMS[@]}"; do
  # Extract target name from params path for output
  target_name=$(basename "$(dirname "$params")")
  echo "Compiling target: $target_name"
  
  # Create cache directory based on params directory + prebuild_static_cache
  cache_dir="$(dirname "$params")/prebuild_static_cache"
  mkdir -p "$cache_dir"
  
  # Create a temporary params file with removed bazel-workspace prefix
  temp_params="${params}.actual"
  sed -e "s|-Xadd-cache=bazel-out/|-Xadd-cache=bazel-out/|g" \
      "$params" > "$temp_params"
  
  # Change to bazel-workspace directory and execute command
  cd bazel-workspace
  env - \
    JAVA_HOME="$JAVA_HOME" \
    $KOTLIN_NATIVE_DIST/bin/konanc \
    @"../$temp_params"
  cd ..
done